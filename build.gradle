plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'io.github.juuxel.loom-vineflower' version '1.11.0'
	id 'com.modrinth.minotaur' version '2.+'
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name "Maven Central"
		url "https://repo.maven.apache.org/maven2"
	}
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	maven { url "https://repo.codemc.io/repository/maven-public/" } // For Occlusion Culling library
	maven { url "https://repo.nea.moe/releases" } // For neu repoparser
	maven { url "https://jitpack.io" }
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Cloth Config
	include modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude group: "net.fabricmc.fabric-api"
		exclude module: "modmenu"
	}

	// Mod Menu
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	// REI
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	//modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// EMI
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}+${project.minecraft_version}:api"
	//modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}+${project.minecraft_version}"

	// Renderer (https://github.com/0x3C50/Renderer)
	include modImplementation("com.github.0x3C50:Renderer:${project.renderer_version}") {
		exclude group: "io.github.ladysnake" exclude module: "satin"
	}

	// Discord IPC (https://github.com/MeteorDevelopment/discord-ipc)
	include modImplementation("meteordevelopment:discord-ipc:1.1")

	// Mixin Extras (https://github.com/LlamaLad7/MixinExtras)
	include implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${project.mixin_extras_version}"))

	// BetterInject (https://github.com/caoimhebyrne/BetterInject)
	include implementation(annotationProcessor("com.github.cbyrneee:BetterInject:${project.betterinject_version}"))

	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit used pull data from the NEU item repo
	include implementation("org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r")

	// Occlusion Culling (https://github.com/LogisticsCraft/OcclusionCulling)
	include implementation("com.logisticscraft:occlusionculling:${project.occlusionculling_version}")

	// neu repoparser | implement it if this is being used
	// include implementation("moe.nea:neurepoparser:${project.repoparser_version}")
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

test {
	useJUnitPlatform()
}

modrinth {
	token = System.getenv('MODRINTH_TOKEN')
	projectId = project.modrinth_id
	versionNumber = "v${project.version}"
	versionName = "Skyblocker ${project.mod_version} for ${project.minecraft_version}"
	versionType = "release"
	uploadFile = remapJar
	gameVersions = [project.minecraft_version]
	loaders = ["fabric"]
	versionType = "release"
	dependencies {
		required.project "fabric-api"
		embedded.project "cloth-config"
		optional.project "modmenu"
		optional.project "rei"
		optional.project "emi"
	}
	changelog = System.getenv('CHANGELOG')
}

tasks.modrinth.doLast {
	println "::set-output name=url::https://modrinth.com/mod/skyblocker-liap/version/$uploadInfo.id"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
